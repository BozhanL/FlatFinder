# https://www.expobuilder.app/
name: React Native CI/CD

on:
  push:
    branches: [main, master, sprint/**]
  pull_request:
    branches: [main, master, sprint/**]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  typescript:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
          check-latest: true

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üß™ Run TypeScript check
        run: npm run check-ts

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
          check-latest: true

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üßπ Run ESLint
        run: npm run lint

  format:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
          check-latest: true

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üé® Run Prettier check
        run: npm run format

  coverage:
    runs-on: ubuntu-latest
    permissions:
      # Required to checkout the code
      contents: write
      # Required to put a comment into the pull-request
      pull-requests: write
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
          check-latest: true

      - name: üì¶ Install dependencies
        id: install
        run: npm ci

      - name: üß™ Run Jest Tests
        id: test
        run: npm run coverage | tee ./coverage.txt && exit ${PIPESTATUS[0]}

      - name: üß™ Run Jest Coverage Comment
        if: ${{ success() || (failure() && steps.install.conclusion == 'success') }}
        id: coverage
        uses: MishaKav/jest-coverage-comment@174f9cbf582b7cc2a7a3acce14dcfc8362e9d37f
        with:
          coverage-path: ./coverage.txt
          create-new-comment: false

      - name: ü™™ Dynamic Badges
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: Schneegans/dynamic-badges-action@e9a478b16159b4d31420099ba146cdc50f134483
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 8fcf597ef6922a83da15d24d7aff8fe8
          filename: FlatFinderCoverageBadge.json
          label: Coverage
          message: ${{ steps.coverage.outputs.coverage }}%
          color: ${{ steps.coverage.outputs.color }}
          namedLogo: typescript

  build:
    runs-on: ubuntu-latest
    name: build (${{ matrix.build.name }})
    strategy:
      matrix:
        build:
          - name: debug-apk
            command: assembleDebug
            location: ./android/app/build/outputs/apk/debug/

          - name: release-apk
            command: assembleRelease
            location: ./android/app/build/outputs/apk/release/

          - name: debug-aab
            command: bundleDebug
            location: ./android/app/build/outputs/bundle/debug/

          - name: release-aab
            command: bundleRelease
            location: ./android/app/build/outputs/bundle/release/

    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
          check-latest: true

      - name: üèó Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      - name: üèó Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üì± Prebuild
        run: npm run prebuild:android:clean

      - name: üì± Build
        working-directory: ./android
        run: ./gradlew ${{ matrix.build.command }}

      - name: ‚úçÔ∏è Sign app APK
        uses: r0adkll/sign-android-release@349ebdef58775b1e0d8099458af0816dc79b6407
        id: sign_app
        with:
          releaseDirectory: ${{ matrix.build.location }}
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: 36.0.0

      - name: üì¶ Upload build artifacts to GitHub
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.build.name }}
          if-no-files-found: error
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          retention-days: 7

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: üì¶ Set up flatfinder.keystore
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: echo $SIGNING_KEY | base64 -d - > ./flatfinder.keystore

      - name: üì± Build
        working-directory: ./docker
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: docker compose up --build --exit-code-from apk apk

      - name: üì¶ Upload build artifacts to GitHub
        uses: actions/upload-artifact@v5
        with:
          name: docker-release-apk
          if-no-files-found: error
          path: ./output/app-release-signed.apk
          retention-days: 7

  collect:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs:
      - typescript
      - lint
      - format
      - coverage
      - build
      - docker
    steps:
      - name: üì¶ Install jq
        run: "sudo apt-get update && sudo apt-get install jq"

      - name: ‚úîÔ∏è Fail job if any of the previous jobs failed
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: "for i in `echo ${NEEDS} | jq -r '.[].result'`; do if [[ $i == 'failure' ]]; then echo ${NEEDS}; exit 1; fi; done;"
