# https://www.expobuilder.app/
name: React Native CI/CD

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "docs/**"
  pull_request:
    branches: [main, master]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "docs/**"
  workflow_dispatch:

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  test:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "npm"
          check-latest: true

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üß™ Run TypeScript check
        run: npm run check-ts

      - name: üßπ Run ESLint
        run: npm run lint

      - name: üé® Run Prettier check
        run: npm run format:check

      - name: üß™ Run Jest Tests
        run: npm run test

      # - name: üß™ Run Jest Coverage
      #   uses: ArtiomTr/jest-coverage-report-action@v2

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          [
            {
              name: "debug-apk",
              command: "assembleDebug",
              location: "./android/app/build/outputs/apk/debug/",
            },
            {
              name: "release-apk",
              command: "assembleRelease",
              location: "./android/app/build/outputs/apk/release/",
            },
            {
              name: "debug-aab",
              command: "bundleDebug",
              location: "./android/app/build/outputs/bundle/debug/",
            },
            {
              name: "release-aab",
              command: "bundleRelease",
              location: "./android/app/build/outputs/bundle/release/",
            },
          ]

    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v5

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "npm"
          check-latest: true

      - name: üì¶ Install dependencies
        run: npm ci

      - name: ‚úçÔ∏è Retrieve GOOGLE_SERVICES
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          echo $GOOGLE_SERVICES > ./google-services.json

      - name: üì± Prebuild
        run: npx expo prebuild --platform android

      # - name: üì± Setup index.android.bundle
      #   run: npx expo export:embed --platform android --dev false --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/

      - name: üì± Build
        working-directory: ./android
        run: ./gradlew ${{ matrix.build.command }}

      - name: ‚úçÔ∏è Sign app APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: ${{ matrix.build.location }}
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "36.0.0"

      - name: üì¶ Upload build artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.name }}
          if-no-files-found: error
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          retention-days: 7

  collect:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs:
      - test
      - build
    env:
      NEEDS: ${{ toJSON(needs) }}
    steps:
      - name: Install jq
        run: "sudo apt-get update && sudo apt-get install jq"
      - name: Fail job if any of the previous jobs failed
        run: "for i in `echo ${NEEDS} | jq -r '.[].result'`; do if [[ $i == 'failure' ]]; then echo ${NEEDS}; exit 1; fi; done;"
