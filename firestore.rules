rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /flatmates/{document=**} {
      allow read, write: if request.auth != null;
    }

    match /groups/{document=**} {
      allow read, write: if request.auth.uid in resource.data.members || request.auth.uid in request.resource.data.members;
    }

    match /messages/{group} {
      function isMember() {
        return request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members;
      }

      function isCreator(data) {
        return request.auth.uid == data.sender;
      }

      function allowUpdateReceived(n,o) {
        return n.diff(o).affectedKeys().hasOnly(['received']) && n.received == true;
      }

      match /messages/{document=**} {
        allow read: if isMember();
        allow write: if isMember() && isCreator(request.resource.data);
        allow update: if isMember() && allowUpdateReceived(request.resource.data, resource.data);
      }
    }

    match /message_test_user/{document=**} {
      allow read, write: if request.auth != null;
    }

    match /notifications/{document=**} {
      // Don't allow users to list notifications
      allow get, write: if request.auth != null;
    }

    match /properties/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == request.resource.data.createdBy;
    }
    
    match /users/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == uid;
        match /swipes/{targetId} {
          allow read: if request.auth != null;
          allow write: if request.auth.uid == uid;
        }
        match /watchlist/{propertyId} {
        	 allow get, list, create, delete: if request.auth != null && request.auth.uid == uid;
     }   
		}
    
    match /support_tickets/{ticketId} {
      // Allow logined user to submit ticket
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;

      // Allow user to review their previous ticket
      allow read: if request.auth != null
                  && resource.data.uid == request.auth.uid;

      // Not allow user to update and delete
      allow update, delete: if false;   
    }
}
}